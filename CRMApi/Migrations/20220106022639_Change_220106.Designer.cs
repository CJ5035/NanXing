// <auto-generated />
using System;
using CRMApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRMApi.Migrations
{
    [DbContext(typeof(NanXingGuoRen_Context))]
    [Migration("20220106022639_Change_220106")]
    partial class Change_220106
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CRMApi.Entity.AgvalarmLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AlarmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("alarmDate");

                    b.Property<string>("AlarmDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alarmDesc");

                    b.Property<int?>("AlarmGrade")
                        .HasColumnType("int")
                        .HasColumnName("alarmGrade");

                    b.Property<int?>("AlarmReadFlag")
                        .HasColumnType("int")
                        .HasColumnName("alarmReadFlag");

                    b.Property<string>("AlarmSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alarmSource");

                    b.Property<int?>("AlarmType")
                        .HasColumnType("int")
                        .HasColumnName("alarmType");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int")
                        .HasColumnName("areaId");

                    b.Property<string>("ChannelDeviceId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("channelDeviceId");

                    b.Property<string>("ChannelName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("channelName");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deviceName");

                    b.Property<string>("DeviceNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deviceNum");

                    b.Property<DateTime>("RecTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("recTime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("AGVAlarmLog");
                });

            modelBuilder.Entity("CRMApi.Entity.AgvmissionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AgvcarId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AGVCarId");

                    b.Property<string>("AreaClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EndLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MissionFloorId")
                        .HasColumnType("int")
                        .HasColumnName("MissionFloor_ID");

                    b.Property<string>("MissionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OrderGroupId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("OrderTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RunState")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SendMsg")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SendState")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SortIndex")
                        .HasColumnType("int");

                    b.Property<string>("StartLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateMsg")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StockNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StockPlanId")
                        .HasColumnType("int")
                        .HasColumnName("StockPlan_ID");

                    b.Property<string>("TrayNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("userId");

                    b.HasKey("Id")
                        .HasName("PK_AGVMISSIONINFO")
                        .IsClustered(false);

                    b.ToTable("AGVMissionInfo");
                });

            modelBuilder.Entity("CRMApi.Entity.BatchNoPro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("batchNo");

                    b.Property<string>("BoxName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxName");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxNo");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("class");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Itemno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemno");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("position");

                    b.Property<string>("Probiaozhun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("probiaozhun");

                    b.Property<DateTime?>("Prodate")
                        .HasColumnType("datetime")
                        .HasColumnName("prodate");

                    b.Property<string>("Proname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("proname");

                    b.Property<string>("Prosn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prosn");

                    b.Property<string>("Protype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("protype");

                    b.Property<decimal?>("Proweight")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("proweight");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark1");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<string>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userID");

                    b.Property<string>("YuanliaobatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("yuanliaobatchNo");

                    b.HasKey("Id");

                    b.ToTable("BatchNoPro");
                });

            modelBuilder.Entity("CRMApi.Entity.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("CRMApi.Entity.Department", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<string>("Abstract")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("abstract");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.Property<string>("Principal")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("principal");

                    b.Property<string>("Syscode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("syscode");

                    b.HasKey("Code");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("CRMApi.Entity.Dept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IX_ParentID");

                    b.ToTable("Depts");
                });

            modelBuilder.Entity("CRMApi.Entity.DeviceStatesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Battery")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("battery");

                    b.Property<string>("DeviceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deviceCode");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deviceName");

                    b.Property<string>("DevicePosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("devicePosition");

                    b.Property<string>("DevicePostionRec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("devicePostionRec");

                    b.Property<string>("DevicePostionX")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("devicePostionX");

                    b.Property<string>("DevicePostionY")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("devicePostionY");

                    b.Property<string>("DeviceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deviceStatus");

                    b.Property<int?>("DeviceStatusInt")
                        .HasColumnType("int")
                        .HasColumnName("deviceStatusInt");

                    b.Property<string>("PayLoad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payLoad");

                    b.Property<DateTime>("RecTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("recTime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("DeviceStatesInfo");
                });

            modelBuilder.Entity("CRMApi.Entity.Energycon", b =>
                {
                    b.Property<decimal?>("CurKwh")
                        .HasColumnType("numeric(14,4)");

                    b.Property<string>("EquName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("PhaseKwh")
                        .HasColumnType("numeric(14,4)");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Sn")
                        .HasColumnType("int");

                    b.ToTable("energycon");
                });

            modelBuilder.Entity("CRMApi.Entity.FaHuoPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Boxnum")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("boxnum");

                    b.Property<string>("Danjuno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("danjuno");

                    b.Property<string>("Danjutype")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("danjutype");

                    b.Property<DateTime?>("Fhdate")
                        .HasColumnType("datetime")
                        .HasColumnName("fhdate");

                    b.Property<string>("Itemname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("itemname");

                    b.Property<string>("Itemno")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("itemno");

                    b.Property<decimal?>("Outqut")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("outqut");

                    b.Property<decimal?>("Salequt")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("salequt");

                    b.Property<string>("Saleunit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("saleunit");

                    b.Property<string>("Spec")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("spec");

                    b.HasKey("Id");

                    b.ToTable("FaHuoPlan");
                });

            modelBuilder.Entity("CRMApi.Entity.Fahuotongzhi", b =>
                {
                    b.Property<double?>("Boxnum")
                        .HasColumnType("float")
                        .HasColumnName("boxnum");

                    b.Property<string>("Danjuno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("danjuno");

                    b.Property<string>("Danjutype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("danjutype");

                    b.Property<string>("Fhdate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("fhdate");

                    b.Property<DateTime?>("Fhdatenew")
                        .HasColumnType("datetime")
                        .HasColumnName("fhdatenew");

                    b.Property<string>("Itemname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemname");

                    b.Property<string>("Itemno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemno");

                    b.Property<double?>("Outqut")
                        .HasColumnType("float")
                        .HasColumnName("outqut");

                    b.Property<double?>("Salequt")
                        .HasColumnType("float")
                        .HasColumnName("salequt");

                    b.Property<string>("Saleunit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("saleunit");

                    b.Property<string>("Spec")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("spec");

                    b.ToTable("fahuotongzhi");
                });

            modelBuilder.Entity("CRMApi.Entity.ItemClassExt", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Code")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Reserve10")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Reserve4")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve5")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve6")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve7")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve8")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve9")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Sn")
                        .HasName("PK_ITEMCLASSEXT");

                    b.ToTable("ItemClassExt");
                });

            modelBuilder.Entity("CRMApi.Entity.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("LogAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logdate")
                        .HasColumnType("datetime");

                    b.Property<string>("MarkLogLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("CRMApi.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NavigateUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ViewPowerId")
                        .HasColumnType("int")
                        .HasColumnName("ViewPowerID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ParentId" }, "IX_ParentID")
                        .HasDatabaseName("IX_ParentID1");

                    b.HasIndex(new[] { "ViewPowerId" }, "IX_ViewPowerID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("CRMApi.Entity.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("CRMApi.Entity.NumSeq", b =>
                {
                    b.Property<string>("Cate")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime?>("CrTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DateNo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.ToTable("NumSeq");
                });

            modelBuilder.Entity("CRMApi.Entity.Online", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Ipadddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPAdddress");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_UserID");

                    b.ToTable("Onlines");
                });

            modelBuilder.Entity("CRMApi.Entity.Pbcatcol", b =>
                {
                    b.Property<string>("PbcBmap")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbc_bmap")
                        .IsFixedLength(true);

                    b.Property<short?>("PbcCase")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_case");

                    b.Property<short?>("PbcCid")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_cid");

                    b.Property<string>("PbcCmnt")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbc_cmnt");

                    b.Property<string>("PbcCnam")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("pbc_cnam")
                        .IsFixedLength(true);

                    b.Property<string>("PbcEdit")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("pbc_edit");

                    b.Property<string>("PbcHdr")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbc_hdr");

                    b.Property<short?>("PbcHght")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_hght");

                    b.Property<short?>("PbcHpos")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_hpos");

                    b.Property<string>("PbcInit")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbc_init");

                    b.Property<short?>("PbcJtfy")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_jtfy");

                    b.Property<string>("PbcLabl")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbc_labl");

                    b.Property<short?>("PbcLpos")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_lpos");

                    b.Property<string>("PbcMask")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("pbc_mask");

                    b.Property<string>("PbcOwnr")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("pbc_ownr")
                        .IsFixedLength(true);

                    b.Property<string>("PbcPtrn")
                        .HasMaxLength(31)
                        .IsUnicode(false)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("pbc_ptrn");

                    b.Property<string>("PbcTag")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbc_tag");

                    b.Property<int?>("PbcTid")
                        .HasColumnType("int")
                        .HasColumnName("pbc_tid");

                    b.Property<string>("PbcTnam")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("pbc_tnam")
                        .IsFixedLength(true);

                    b.Property<short?>("PbcWdth")
                        .HasColumnType("smallint")
                        .HasColumnName("pbc_wdth");

                    b.HasIndex(new[] { "PbcTnam", "PbcOwnr", "PbcCnam" }, "pbcatcol_idx")
                        .IsUnique()
                        .HasFilter("[pbc_tnam] IS NOT NULL AND [pbc_ownr] IS NOT NULL AND [pbc_cnam] IS NOT NULL");

                    b.ToTable("pbcatcol");
                });

            modelBuilder.Entity("CRMApi.Entity.Pbcatedt", b =>
                {
                    b.Property<int?>("PbeCntr")
                        .HasColumnType("int")
                        .HasColumnName("pbe_cntr");

                    b.Property<string>("PbeEdit")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbe_edit");

                    b.Property<int?>("PbeFlag")
                        .HasColumnType("int")
                        .HasColumnName("pbe_flag");

                    b.Property<string>("PbeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("pbe_name");

                    b.Property<short>("PbeSeqn")
                        .HasColumnType("smallint")
                        .HasColumnName("pbe_seqn");

                    b.Property<short>("PbeType")
                        .HasColumnType("smallint")
                        .HasColumnName("pbe_type");

                    b.Property<string>("PbeWork")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("pbe_work")
                        .IsFixedLength(true);

                    b.HasIndex(new[] { "PbeName", "PbeSeqn" }, "pbcatedt_idx")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("pbcatedt");
                });

            modelBuilder.Entity("CRMApi.Entity.Pbcatfmt", b =>
                {
                    b.Property<int?>("PbfCntr")
                        .HasColumnType("int")
                        .HasColumnName("pbf_cntr");

                    b.Property<string>("PbfFrmt")
                        .IsRequired()
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbf_frmt");

                    b.Property<string>("PbfName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("pbf_name");

                    b.Property<short>("PbfType")
                        .HasColumnType("smallint")
                        .HasColumnName("pbf_type");

                    b.HasIndex(new[] { "PbfName" }, "pbcatfmt_idx")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("pbcatfmt");
                });

            modelBuilder.Entity("CRMApi.Entity.Pbcattbl", b =>
                {
                    b.Property<short?>("PbdFchr")
                        .HasColumnType("smallint")
                        .HasColumnName("pbd_fchr");

                    b.Property<string>("PbdFfce")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("pbd_ffce")
                        .IsFixedLength(true);

                    b.Property<short?>("PbdFhgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbd_fhgt");

                    b.Property<string>("PbdFitl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbd_fitl")
                        .IsFixedLength(true);

                    b.Property<short?>("PbdFptc")
                        .HasColumnType("smallint")
                        .HasColumnName("pbd_fptc");

                    b.Property<string>("PbdFunl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbd_funl")
                        .IsFixedLength(true);

                    b.Property<short?>("PbdFwgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbd_fwgt");

                    b.Property<short?>("PbhFchr")
                        .HasColumnType("smallint")
                        .HasColumnName("pbh_fchr");

                    b.Property<string>("PbhFfce")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("pbh_ffce")
                        .IsFixedLength(true);

                    b.Property<short?>("PbhFhgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbh_fhgt");

                    b.Property<string>("PbhFitl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbh_fitl")
                        .IsFixedLength(true);

                    b.Property<short?>("PbhFptc")
                        .HasColumnType("smallint")
                        .HasColumnName("pbh_fptc");

                    b.Property<string>("PbhFunl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbh_funl")
                        .IsFixedLength(true);

                    b.Property<short?>("PbhFwgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbh_fwgt");

                    b.Property<short?>("PblFchr")
                        .HasColumnType("smallint")
                        .HasColumnName("pbl_fchr");

                    b.Property<string>("PblFfce")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("char(32)")
                        .HasColumnName("pbl_ffce")
                        .IsFixedLength(true);

                    b.Property<short?>("PblFhgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbl_fhgt");

                    b.Property<string>("PblFitl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbl_fitl")
                        .IsFixedLength(true);

                    b.Property<short?>("PblFptc")
                        .HasColumnType("smallint")
                        .HasColumnName("pbl_fptc");

                    b.Property<string>("PblFunl")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("pbl_funl")
                        .IsFixedLength(true);

                    b.Property<short?>("PblFwgt")
                        .HasColumnType("smallint")
                        .HasColumnName("pbl_fwgt");

                    b.Property<string>("PbtCmnt")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbt_cmnt");

                    b.Property<string>("PbtOwnr")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("pbt_ownr")
                        .IsFixedLength(true);

                    b.Property<int?>("PbtTid")
                        .HasColumnType("int")
                        .HasColumnName("pbt_tid");

                    b.Property<string>("PbtTnam")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("pbt_tnam")
                        .IsFixedLength(true);

                    b.HasIndex(new[] { "PbtTnam", "PbtOwnr" }, "pbcattbl_idx")
                        .IsUnique()
                        .HasFilter("[pbt_tnam] IS NOT NULL AND [pbt_ownr] IS NOT NULL");

                    b.ToTable("pbcattbl");
                });

            modelBuilder.Entity("CRMApi.Entity.Pbcatvld", b =>
                {
                    b.Property<int?>("PbvCntr")
                        .HasColumnType("int")
                        .HasColumnName("pbv_cntr");

                    b.Property<string>("PbvMsg")
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbv_msg");

                    b.Property<string>("PbvName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("pbv_name");

                    b.Property<short>("PbvType")
                        .HasColumnType("smallint")
                        .HasColumnName("pbv_type");

                    b.Property<string>("PbvVald")
                        .IsRequired()
                        .HasMaxLength(254)
                        .IsUnicode(false)
                        .HasColumnType("varchar(254)")
                        .HasColumnName("pbv_vald");

                    b.HasIndex(new[] { "PbvName" }, "pbcatvld_idx")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("pbcatvld");
                });

            modelBuilder.Entity("CRMApi.Entity.Pchao", b =>
                {
                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Lotno")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lotno");

                    b.Property<string>("Oper")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("oper");

                    b.ToTable("pchao");
                });

            modelBuilder.Entity("CRMApi.Entity.Power", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("CRMApi.Entity.PrdMissionSl", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SN")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Auditer")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("BoxLblName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Caseno")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("CASENO");

                    b.Property<string>("Checkman")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CHECKMAN");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("COLOR");

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Grade")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GRADE");

                    b.Property<DateTime?>("InputDate")
                        .HasColumnType("datetime");

                    b.Property<short?>("IsCancel")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsPrint")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsReturn")
                        .HasColumnType("smallint");

                    b.Property<string>("ItemName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KaiDan")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("KaiDanDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LabelName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Lotno")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("LOTNO");

                    b.Property<string>("Operator")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OPERATOR");

                    b.Property<string>("Orderno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ORDERNO");

                    b.Property<string>("PackMan")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PiZhun")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("PiZhunDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PrdMissionNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Prodate")
                        .HasColumnType("datetime")
                        .HasColumnName("PRODate");

                    b.Property<string>("Qcstandard")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("QCStandard");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("REMARK");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE1");

                    b.Property<string>("Reserve10")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE10");

                    b.Property<string>("Reserve11")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE11");

                    b.Property<string>("Reserve12")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE12");

                    b.Property<string>("Reserve13")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE13");

                    b.Property<string>("Reserve14")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE14");

                    b.Property<string>("Reserve15")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE15");

                    b.Property<string>("Reserve16")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE16");

                    b.Property<string>("Reserve17")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE17");

                    b.Property<string>("Reserve18")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE18");

                    b.Property<string>("Reserve19")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE19");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE2");

                    b.Property<string>("Reserve20")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESERVE20");

                    b.Property<string>("Reserve21")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE21");

                    b.Property<string>("Reserve22")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE22");

                    b.Property<string>("Reserve23")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE23");

                    b.Property<string>("Reserve24")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE24");

                    b.Property<string>("Reserve25")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE25");

                    b.Property<string>("Reserve26")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE26");

                    b.Property<string>("Reserve27")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE27");

                    b.Property<string>("Reserve28")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE28");

                    b.Property<string>("Reserve29")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE29");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE3");

                    b.Property<string>("Reserve30")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RESERVE30");

                    b.Property<string>("Reserve4")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE4");

                    b.Property<string>("Reserve5")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE5");

                    b.Property<string>("Reserve6")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE6");

                    b.Property<string>("Reserve7")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE7");

                    b.Property<string>("Reserve8")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE8");

                    b.Property<string>("Reserve9")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE9");

                    b.Property<string>("Spec")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<double?>("Thickness")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("WEIGHT");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.Property<short?>("WlStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Workgrp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WORKGRP");

                    b.HasKey("Sn")
                        .HasName("PK_PRDMISSIONSL");

                    b.ToTable("PrdMissionSL");
                });

            modelBuilder.Entity("CRMApi.Entity.Probarlist1", b =>
                {
                    b.Property<string>("Bumen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bumen");

                    b.Property<double?>("Danjianwt")
                        .HasColumnType("float")
                        .HasColumnName("danjianwt");

                    b.Property<string>("Fahuodanhao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fahuodanhao");

                    b.Property<string>("Itemname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemname");

                    b.Property<string>("Itemno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemno");

                    b.Property<string>("Lotno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lotno");

                    b.Property<DateTime?>("Makedate")
                        .HasColumnType("datetime")
                        .HasColumnName("makedate");

                    b.Property<string>("Paichandan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("paichandan");

                    b.Property<string>("Probar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("probar");

                    b.Property<DateTime?>("Riqi")
                        .HasColumnType("datetime")
                        .HasColumnName("riqi");

                    b.Property<int>("Sn")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("spec");

                    b.Property<string>("Workshop")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("workshop");

                    b.Property<string>("Zhuanhuandan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("zhuanhuandan");

                    b.ToTable("probarlist1");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderheader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("MergeCells")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mergeCells");

                    b.Property<string>("MergeCellsValue")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mergeCellsValue");

                    b.Property<DateTime?>("Optdate")
                        .HasColumnType("datetime")
                        .HasColumnName("optdate");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("orderNo");

                    b.Property<string>("PositionClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("positionClass");

                    b.Property<string>("Prosn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("prosn");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("remark");

                    b.HasKey("Id");

                    b.ToTable("ProductOrderheaders");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("batchNo");

                    b.Property<string>("BoxName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxName");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxNo");

                    b.Property<string>("Chejianclass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("chejianclass");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clientname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("clientname");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<decimal?>("Count")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("count");

                    b.Property<string>("ErporderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ERPOrderNo");

                    b.Property<decimal?>("High")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("high");

                    b.Property<string>("InName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inName");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Itemno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemno");

                    b.Property<string>("Jingbanren")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("jingbanren");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("length");

                    b.Property<string>("Mark")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mark");

                    b.Property<string>("Material")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("material");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Optdate")
                        .HasColumnType("datetime")
                        .HasColumnName("optdate");

                    b.Property<DateTime?>("PlanDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("PriceOut")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("priceOut");

                    b.Property<int?>("ProductOrderheaderId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOrderheader_ID");

                    b.Property<string>("Providername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("providername");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark1");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("width");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductOrderheaderId" }, "IX_FK_dbo_ProductOrderlists_dbo_ProductOrderheaders_ProductOrderheader_ID");

                    b.ToTable("ProductOrderlists");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderlistsbak1215", b =>
                {
                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("batchNo");

                    b.Property<string>("BoxName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxName");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxNo");

                    b.Property<string>("Chejianclass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("chejianclass");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clientname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("clientname");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<decimal?>("Count")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("count");

                    b.Property<string>("ErporderNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ERPOrderNo");

                    b.Property<decimal?>("High")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("high");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("InName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inName");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Itemno")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemno");

                    b.Property<string>("Jingbanren")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("jingbanren");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("length");

                    b.Property<string>("Mark")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mark");

                    b.Property<string>("Material")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("material");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("Optdate")
                        .HasColumnType("datetime")
                        .HasColumnName("optdate");

                    b.Property<DateTime?>("PlanDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<decimal?>("PriceOut")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("priceOut");

                    b.Property<int?>("ProductOrderheaderId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOrderheader_ID");

                    b.Property<string>("Providername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("providername");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark1");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("width");

                    b.ToTable("ProductOrderlistsbak1215");
                });

            modelBuilder.Entity("CRMApi.Entity.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("batchNo");

                    b.Property<string>("BoxName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxName");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxNo");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("class");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<double?>("Danjianwt")
                        .HasColumnType("float")
                        .HasColumnName("danjianwt");

                    b.Property<string>("Danjuhao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("danjuhao");

                    b.Property<string>("Fahuodan")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fahuodan");

                    b.Property<string>("Ingredients")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Itemno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemno");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("position");

                    b.Property<string>("Probiaozhun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("probiaozhun");

                    b.Property<DateTime>("Prodate")
                        .HasColumnType("datetime")
                        .HasColumnName("prodate");

                    b.Property<int>("ProductOrderlistsId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOrderlistsID");

                    b.Property<string>("Proname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("proname");

                    b.Property<string>("Prosn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prosn");

                    b.Property<string>("Protype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("protype");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark1");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<string>("YuanliaobatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("yuanliaobatchNo");

                    b.Property<string>("Zhuanhuandan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("zhuanhuandan");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductOrderlistsId" }, "IX_FK_ProductOrderlistsProduction");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductionBak1215", b =>
                {
                    b.Property<string>("BatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("batchNo");

                    b.Property<string>("BoxName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxName");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("boxNo");

                    b.Property<string>("Class")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("class");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Danjuhao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("danjuhao");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Ingredients")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ingredients");

                    b.Property<string>("Itemno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemno");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("position");

                    b.Property<string>("Probiaozhun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("probiaozhun");

                    b.Property<DateTime>("Prodate")
                        .HasColumnType("datetime")
                        .HasColumnName("prodate");

                    b.Property<int>("ProductOrderlistsId")
                        .HasColumnType("int")
                        .HasColumnName("ProductOrderlistsID");

                    b.Property<string>("Proname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("proname");

                    b.Property<string>("Prosn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prosn");

                    b.Property<string>("Protype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("protype");

                    b.Property<string>("Remark1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark1");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("unit");

                    b.Property<string>("YuanliaobatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("yuanliaobatchNo");

                    b.ToTable("ProductionBAk1215");
                });

            modelBuilder.Entity("CRMApi.Entity.Productiondt", b =>
                {
                    b.Property<int>("SerialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caseno")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("CASENO");

                    b.Property<string>("Checkman")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CHECKMAN");

                    b.Property<string>("Client")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COLOR");

                    b.Property<string>("Grade")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GRADE");

                    b.Property<DateTime?>("InputDate")
                        .HasColumnType("datetime");

                    b.Property<short?>("IsCancel")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsPrint")
                        .HasColumnType("smallint");

                    b.Property<short?>("IsReturn")
                        .HasColumnType("smallint");

                    b.Property<string>("ItemName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Lotno")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("LOTNO")
                        .HasComment("fds fds  fds fdsfds fs");

                    b.Property<string>("Operator")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OPERATOR");

                    b.Property<string>("Orderno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ORDERNO");

                    b.Property<string>("PackMan")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PrdDtlSn")
                        .HasColumnType("int");

                    b.Property<string>("PrdMissionNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ProSn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasComment("产品编号");

                    b.Property<DateTime>("Prodate")
                        .HasColumnType("datetime")
                        .HasColumnName("PRODate")
                        .HasComment("生产日期");

                    b.Property<string>("Qcstandard")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("QCStandard");

                    b.Property<string>("Remark")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("REMARK");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE1");

                    b.Property<string>("Reserve10")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE10");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE2");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE3");

                    b.Property<string>("Reserve4")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE4");

                    b.Property<string>("Reserve5")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE5");

                    b.Property<string>("Reserve6")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE6");

                    b.Property<string>("Reserve7")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("RESERVE7");

                    b.Property<string>("Reserve8")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE8");

                    b.Property<string>("Reserve9")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESERVE9");

                    b.Property<string>("Spec")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("WEIGHT");

                    b.Property<short?>("WlStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("Workgrp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("WORKGRP");

                    b.HasKey("SerialNo")
                        .HasName("PK_PRODUCTIONdt");

                    b.ToTable("Productiondt");

                    b
                        .HasComment("fdsfds fdsfsfd  fsd fds f");
                });

            modelBuilder.Entity("CRMApi.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CRMApi.Entity.RolePower", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int>("PowerId")
                        .HasColumnType("int")
                        .HasColumnName("PowerID");

                    b.HasKey("RoleId", "PowerId")
                        .HasName("PK_dbo.RolePowers");

                    b.HasIndex(new[] { "PowerId" }, "IX_PowerID");

                    b.HasIndex(new[] { "RoleId" }, "IX_RoleID");

                    b.ToTable("RolePowers");
                });

            modelBuilder.Entity("CRMApi.Entity.RoleUser", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RoleId", "UserId")
                        .HasName("PK_dbo.RoleUsers");

                    b.HasIndex(new[] { "RoleId" }, "IX_RoleID")
                        .HasDatabaseName("IX_RoleID1");

                    b.HasIndex(new[] { "UserId" }, "IX_UserID")
                        .HasDatabaseName("IX_UserID1");

                    b.ToTable("RoleUsers");
                });

            modelBuilder.Entity("CRMApi.Entity.SensorStorey2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasComment("主键")
                        .UseIdentityColumn();

                    b.Property<double?>("Ammeter1")
                        .HasColumnType("float");

                    b.Property<double?>("Ammeter2")
                        .HasColumnType("float");

                    b.Property<double?>("Ammeter3")
                        .HasColumnType("float")
                        .HasComment("电表");

                    b.Property<double?>("Humidity")
                        .HasColumnType("float")
                        .HasComment("湿度");

                    b.Property<double?>("Noise")
                        .HasColumnType("float")
                        .HasComment("噪声");

                    b.Property<DateTime?>("RefleshTime")
                        .HasColumnType("datetime")
                        .HasComment("更新时间");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float")
                        .HasComment("温度");

                    b.Property<double?>("Thermostat1")
                        .HasColumnType("float")
                        .HasComment("温控1");

                    b.Property<double?>("Thermostat2")
                        .HasColumnType("float")
                        .HasComment("温控2");

                    b.Property<double?>("Thermostat3")
                        .HasColumnType("float")
                        .HasComment("温控3");

                    b.Property<double?>("Thermostat4")
                        .HasColumnType("float")
                        .HasComment("温控4");

                    b.Property<double?>("Thermostat5")
                        .HasColumnType("float")
                        .HasComment("温控5");

                    b.Property<double?>("Thermostat6")
                        .HasColumnType("float")
                        .HasComment("温控6");

                    b.Property<double?>("ToxicGas")
                        .HasColumnType("float")
                        .HasComment("有毒气体");

                    b.HasKey("Id");

                    b.ToTable("SensorStorey2");
                });

            modelBuilder.Entity("CRMApi.Entity.SensorStorey3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<double?>("Ammeter1")
                        .HasColumnType("float");

                    b.Property<double?>("Ammeter2")
                        .HasColumnType("float");

                    b.Property<double?>("Ammeter3")
                        .HasColumnType("float");

                    b.Property<double?>("DieselOilFlow")
                        .HasColumnType("float");

                    b.Property<double?>("Humidity")
                        .HasColumnType("float");

                    b.Property<double?>("Noise")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RefleshTime")
                        .HasColumnType("datetime");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat1")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat2")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat3")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat4")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat5")
                        .HasColumnType("float");

                    b.Property<double?>("Thermostat6")
                        .HasColumnType("float");

                    b.Property<double?>("ToxicGas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SensorStorey3");
                });

            modelBuilder.Entity("CRMApi.Entity.Serialno", b =>
                {
                    b.Property<string>("Serialname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SERIALNAME");

                    b.Property<int>("Serialno1")
                        .HasColumnType("int")
                        .HasColumnName("SERIALNO");

                    b.HasKey("Serialname");

                    b.ToTable("SERIALNO");
                });

            modelBuilder.Entity("CRMApi.Entity.StockPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("batchNo");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("color");

                    b.Property<decimal?>("Count")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("count");

                    b.Property<string>("Mark")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mark");

                    b.Property<string>("PlanNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlanUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("planUser");

                    b.Property<DateTime>("Plantime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("plantime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Position")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("position");

                    b.Property<string>("Probiaozhun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("probiaozhun");

                    b.Property<string>("Proname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("proname");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<string>("States")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("states");

                    b.HasKey("Id");

                    b.ToTable("StockPlan");
                });

            modelBuilder.Entity("CRMApi.Entity.Sysparm", b =>
                {
                    b.Property<string>("Paraitem")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("paraitem");

                    b.Property<string>("ItemCls")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Paravalue")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("paravalue");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Reserve4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Paraitem");

                    b.ToTable("SYSPARM");
                });

            modelBuilder.Entity("CRMApi.Entity.TelenClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Bank")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank");

                    b.Property<string>("ClientManager")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("clientManager");

                    b.Property<string>("Condiction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("condiction");

                    b.Property<string>("Eamil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Gendan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gendan");

                    b.Property<string>("Implementer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("implementer");

                    b.Property<string>("LevelCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("levelCode");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nickname");

                    b.Property<string>("Number")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Openid")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("openid");

                    b.Property<string>("Remark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("remark");

                    b.Property<DateTime?>("ServerTime")
                        .HasColumnType("datetime")
                        .HasColumnName("serverTime");

                    b.HasKey("Id");

                    b.ToTable("TelenClients");
                });

            modelBuilder.Entity("CRMApi.Entity.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("CRMApi.Entity.TitleUser", b =>
                {
                    b.Property<int>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("TitleID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TitleId", "UserId")
                        .HasName("PK_dbo.TitleUsers");

                    b.HasIndex(new[] { "TitleId" }, "IX_TitleID");

                    b.HasIndex(new[] { "UserId" }, "IX_UserID")
                        .HasDatabaseName("IX_UserID2");

                    b.ToTable("TitleUsers");
                });

            modelBuilder.Entity("CRMApi.Entity.TouLiaoRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Prosn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("prosn");

                    b.Property<DateTime?>("RecTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.ToTable("TouLiaoRecord");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayPro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Optdate")
                        .HasColumnType("datetime")
                        .HasColumnName("optdate");

                    b.Property<string>("Prosn")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("prosn");

                    b.Property<int>("TrayStateId")
                        .HasColumnType("int")
                        .HasColumnName("TrayStateID");

                    b.HasKey("Id");

                    b.HasIndex("TrayStateId");

                    b.ToTable("TrayPro");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("OnlineCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Optdate")
                        .HasColumnType("datetime")
                        .HasColumnName("optdate");

                    b.Property<decimal?>("TrayHeight")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("trayHeight");

                    b.Property<string>("TrayNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TrayNO");

                    b.Property<int?>("WareLocationId")
                        .HasColumnType("int")
                        .HasColumnName("WareLocation_ID");

                    b.HasKey("Id");

                    b.HasIndex("WareLocationId");

                    b.ToTable("TrayState");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayWeightRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("batchNo");

                    b.Property<string>("Biaozhun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("biaozhun");

                    b.Property<string>("BoxName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("boxName");

                    b.Property<string>("Color")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("color");

                    b.Property<string>("Itemno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("itemno");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("position");

                    b.Property<string>("Proname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("proname");

                    b.Property<string>("Prosn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prosn");

                    b.Property<DateTime?>("RecTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Result")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("result");

                    b.Property<string>("Spec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("spec");

                    b.Property<decimal?>("TrayCount")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("trayCount");

                    b.Property<decimal?>("TrayWeight")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("trayWeight");

                    b.Property<string>("UserId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("userID");

                    b.HasKey("Id");

                    b.ToTable("TrayWeightRecord");
                });

            modelBuilder.Entity("CRMApi.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime");

                    b.Property<string>("CellPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChineseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int")
                        .HasColumnName("DeptID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdentityCard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfficePhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OfficePhoneExt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Qq")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QQ");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("TakeOfficeTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DeptId" }, "IX_DeptID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRMApi.Entity.WareArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("InstockRule")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("InstockWay")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Protype")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("protype");

                    b.Property<int?>("WarId")
                        .HasColumnType("int")
                        .HasColumnName("War_ID");

                    b.Property<bool?>("WareAreaState")
                        .HasColumnType("bit");

                    b.Property<int?>("WareHouseId")
                        .HasColumnType("int")
                        .HasColumnName("WareHouse_ID");

                    b.Property<string>("WareNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("WarId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("WareArea");
                });

            modelBuilder.Entity("CRMApi.Entity.WareAreaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("AreaClass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SortIndex")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_WAREAREACLASS")
                        .IsClustered(false);

                    b.ToTable("WareAreaClass");
                });

            modelBuilder.Entity("CRMApi.Entity.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Remark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Whname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WHName");

                    b.Property<string>("Whposition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WHPosition");

                    b.Property<bool?>("Whstate")
                        .HasColumnType("bit")
                        .HasColumnName("WHState");

                    b.HasKey("Id");

                    b.ToTable("WareHouse");

                    b
                        .HasComment("仓库主表");
                });

            modelBuilder.Entity("CRMApi.Entity.WareLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Agvposition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AGVPosition");

                    b.Property<int?>("HeaderId")
                        .HasColumnType("int")
                        .HasColumnName("header_ID");

                    b.Property<int?>("WareAreaId")
                        .HasColumnType("int")
                        .HasColumnName("WareArea_ID");

                    b.Property<string>("WareLocaNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WareLocaNoLong")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WareLocaNo_Long");

                    b.Property<bool?>("WareLocaState")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HeaderId");

                    b.HasIndex("WareAreaId");

                    b.ToTable("WareLocation");
                });

            modelBuilder.Entity("CRMApi.Entity.WeiXinSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("ExpiraitonTime")
                        .HasColumnType("datetime")
                        .HasColumnName("expiraiton_time");

                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("WeiXinSetting");
                });

            modelBuilder.Entity("CRMApi.Entity.Zhuanhuandan", b =>
                {
                    b.Property<double?>("Boxnun")
                        .HasColumnType("float")
                        .HasColumnName("boxnun");

                    b.Property<string>("Bumen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bumen");

                    b.Property<double?>("Danjianwt")
                        .HasColumnType("float")
                        .HasColumnName("danjianwt");

                    b.Property<string>("Danjuhao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("danjuhao");

                    b.Property<string>("Fahuodanhao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fahuodanhao");

                    b.Property<int?>("Fahuoqut")
                        .HasColumnType("int")
                        .HasColumnName("fahuoqut");

                    b.Property<string>("Itemname")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemname");

                    b.Property<string>("Itemno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("itemno");

                    b.Property<string>("Lotno")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("lotno");

                    b.Property<DateTime?>("Makedate")
                        .HasColumnType("datetime")
                        .HasColumnName("makedate");

                    b.Property<string>("Paichandan")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("paichandan");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("Riqi")
                        .HasColumnType("datetime")
                        .HasColumnName("riqi");

                    b.Property<double?>("Rkquantity")
                        .HasColumnType("float")
                        .HasColumnName("rkquantity");

                    b.Property<int>("Sn")
                        .HasColumnType("int");

                    b.Property<string>("Spec")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("spec");

                    b.Property<string>("Workshop")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("workshop");

                    b.ToTable("zhuanhuandan");
                });

            modelBuilder.Entity("CRMApi.Entity.staff", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("Abstract")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("abstract");

                    b.Property<string>("Account")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("account");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Authorgrp")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("authorgrp");

                    b.Property<string>("Bank")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("bank");

                    b.Property<decimal?>("Basepay")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("basepay");

                    b.Property<DateTime?>("Demdate")
                        .HasColumnType("datetime")
                        .HasColumnName("demdate");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("department");

                    b.Property<string>("Edured")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("edured");

                    b.Property<string>("Idcard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("idcard");

                    b.Property<DateTime?>("Indate")
                        .HasColumnType("datetime")
                        .HasColumnName("indate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("password");

                    b.Property<int?>("Posstate")
                        .HasColumnType("int")
                        .HasColumnName("posstate");

                    b.Property<int>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("sex");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone");

                    b.Property<decimal?>("Timepay")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("timepay");

                    b.Property<decimal?>("Workcls")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("workcls");

                    b.HasKey("Code");

                    b.HasIndex("Department");

                    b.ToTable("STAFF");
                });

            modelBuilder.Entity("CRMApi.Models.Model.CRMPlanHead", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApplicantDept")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApplicantId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApplicantJob")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApplicantName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApplicantPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("ApplyTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRMApplyNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ClientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderSource")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("Photo")
                        .HasMaxLength(4000)
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SaleGroup")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("CRMPlanHead");
                });

            modelBuilder.Entity("CRMApi.Models.Model.CRMPlanList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApplyNoState")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Biaozhun")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BoxName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BoxNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CRMApplyNo_Xuhao")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CRMPlanHead_Id")
                        .HasColumnType("int");

                    b.Property<string>("EmergencyDegree")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InventoryCount")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItemName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int>("OrderCountONkg")
                        .HasColumnType("int");

                    b.Property<string>("ProductRecipe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Reserve1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve6")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reserve7")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Spec")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("CRMPlanHead_Id");

                    b.ToTable("CRMPlanList");
                });

            modelBuilder.Entity("CRMApi.Entity.Dept", b =>
                {
                    b.HasOne("CRMApi.Entity.Dept", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_dbo.Depts_dbo.Depts_ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("CRMApi.Entity.Menu", b =>
                {
                    b.HasOne("CRMApi.Entity.Menu", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_dbo.Menus_dbo.Menus_ParentID");

                    b.HasOne("CRMApi.Entity.Power", "ViewPower")
                        .WithMany("Menus")
                        .HasForeignKey("ViewPowerId")
                        .HasConstraintName("FK_dbo.Menus_dbo.Powers_ViewPowerID");

                    b.Navigation("Parent");

                    b.Navigation("ViewPower");
                });

            modelBuilder.Entity("CRMApi.Entity.Online", b =>
                {
                    b.HasOne("CRMApi.Entity.User", "User")
                        .WithMany("Onlines")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.Onlines_dbo.Users_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderlist", b =>
                {
                    b.HasOne("CRMApi.Entity.ProductOrderheader", "ProductOrderheader")
                        .WithMany("ProductOrderlists")
                        .HasForeignKey("ProductOrderheaderId")
                        .HasConstraintName("FK_dbo_ProductOrderlists_dbo_ProductOrderheaders_ProductOrderheader_ID");

                    b.Navigation("ProductOrderheader");
                });

            modelBuilder.Entity("CRMApi.Entity.Production", b =>
                {
                    b.HasOne("CRMApi.Entity.ProductOrderlist", "ProductOrderlists")
                        .WithMany("Productions")
                        .HasForeignKey("ProductOrderlistsId")
                        .HasConstraintName("FK_ProductOrderlistsProduction")
                        .IsRequired();

                    b.Navigation("ProductOrderlists");
                });

            modelBuilder.Entity("CRMApi.Entity.RolePower", b =>
                {
                    b.HasOne("CRMApi.Entity.Power", "Power")
                        .WithMany("RolePowers")
                        .HasForeignKey("PowerId")
                        .HasConstraintName("FK_dbo.RolePowers_dbo.Powers_PowerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMApi.Entity.Role", "Role")
                        .WithMany("RolePowers")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.RolePowers_dbo.Roles_RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Power");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRMApi.Entity.RoleUser", b =>
                {
                    b.HasOne("CRMApi.Entity.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.RoleUsers_dbo.Roles_RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMApi.Entity.User", "User")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.RoleUsers_dbo.Users_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRMApi.Entity.TitleUser", b =>
                {
                    b.HasOne("CRMApi.Entity.Title", "Title")
                        .WithMany("TitleUsers")
                        .HasForeignKey("TitleId")
                        .HasConstraintName("FK_dbo.TitleUsers_dbo.Titles_TitleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRMApi.Entity.User", "User")
                        .WithMany("TitleUsers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.TitleUsers_dbo.Users_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayPro", b =>
                {
                    b.HasOne("CRMApi.Entity.TrayState", "TrayState")
                        .WithMany("TrayPros")
                        .HasForeignKey("TrayStateId")
                        .HasConstraintName("FK_TrayStateTrayPro")
                        .IsRequired();

                    b.Navigation("TrayState");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayState", b =>
                {
                    b.HasOne("CRMApi.Entity.WareLocation", "WareLocation")
                        .WithMany("TrayStates")
                        .HasForeignKey("WareLocationId")
                        .HasConstraintName("FK_TRAYSTAT_REFERENCE_WARELOCA");

                    b.Navigation("WareLocation");
                });

            modelBuilder.Entity("CRMApi.Entity.User", b =>
                {
                    b.HasOne("CRMApi.Entity.Dept", "Dept")
                        .WithMany("Users")
                        .HasForeignKey("DeptId")
                        .HasConstraintName("FK_dbo.Users_dbo.Depts_DeptID");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("CRMApi.Entity.WareArea", b =>
                {
                    b.HasOne("CRMApi.Entity.WareAreaClass", "War")
                        .WithMany("WareAreas")
                        .HasForeignKey("WarId")
                        .HasConstraintName("FK_WAREAREA_REFERENCE_WAREAREA");

                    b.HasOne("CRMApi.Entity.WareHouse", "WareHouse")
                        .WithMany("WareAreas")
                        .HasForeignKey("WareHouseId")
                        .HasConstraintName("FK_WAREAREA_REFERENCE_WAREHOUS");

                    b.Navigation("War");

                    b.Navigation("WareHouse");
                });

            modelBuilder.Entity("CRMApi.Entity.WareLocation", b =>
                {
                    b.HasOne("CRMApi.Entity.User", "Header")
                        .WithMany("WareLocations")
                        .HasForeignKey("HeaderId")
                        .HasConstraintName("FK_WARELOCA_REFERENCE_USERS");

                    b.HasOne("CRMApi.Entity.WareArea", "WareArea")
                        .WithMany("WareLocations")
                        .HasForeignKey("WareAreaId")
                        .HasConstraintName("FK_WARELOCA_REFERENCE_WAREAREA");

                    b.Navigation("Header");

                    b.Navigation("WareArea");
                });

            modelBuilder.Entity("CRMApi.Entity.staff", b =>
                {
                    b.HasOne("CRMApi.Entity.Department", "DepartmentNavigation")
                        .WithMany("staff")
                        .HasForeignKey("Department")
                        .HasConstraintName("FK_STAFF_REFERENCE_DEPARTME")
                        .IsRequired();

                    b.Navigation("DepartmentNavigation");
                });

            modelBuilder.Entity("CRMApi.Models.Model.CRMPlanList", b =>
                {
                    b.HasOne("CRMApi.Models.Model.CRMPlanHead", "crmph")
                        .WithMany("CRMPlanLists")
                        .HasForeignKey("CRMPlanHead_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("crmph");
                });

            modelBuilder.Entity("CRMApi.Entity.Department", b =>
                {
                    b.Navigation("staff");
                });

            modelBuilder.Entity("CRMApi.Entity.Dept", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRMApi.Entity.Menu", b =>
                {
                    b.Navigation("InverseParent");
                });

            modelBuilder.Entity("CRMApi.Entity.Power", b =>
                {
                    b.Navigation("Menus");

                    b.Navigation("RolePowers");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderheader", b =>
                {
                    b.Navigation("ProductOrderlists");
                });

            modelBuilder.Entity("CRMApi.Entity.ProductOrderlist", b =>
                {
                    b.Navigation("Productions");
                });

            modelBuilder.Entity("CRMApi.Entity.Role", b =>
                {
                    b.Navigation("RolePowers");

                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("CRMApi.Entity.Title", b =>
                {
                    b.Navigation("TitleUsers");
                });

            modelBuilder.Entity("CRMApi.Entity.TrayState", b =>
                {
                    b.Navigation("TrayPros");
                });

            modelBuilder.Entity("CRMApi.Entity.User", b =>
                {
                    b.Navigation("Onlines");

                    b.Navigation("RoleUsers");

                    b.Navigation("TitleUsers");

                    b.Navigation("WareLocations");
                });

            modelBuilder.Entity("CRMApi.Entity.WareArea", b =>
                {
                    b.Navigation("WareLocations");
                });

            modelBuilder.Entity("CRMApi.Entity.WareAreaClass", b =>
                {
                    b.Navigation("WareAreas");
                });

            modelBuilder.Entity("CRMApi.Entity.WareHouse", b =>
                {
                    b.Navigation("WareAreas");
                });

            modelBuilder.Entity("CRMApi.Entity.WareLocation", b =>
                {
                    b.Navigation("TrayStates");
                });

            modelBuilder.Entity("CRMApi.Models.Model.CRMPlanHead", b =>
                {
                    b.Navigation("CRMPlanLists");
                });
#pragma warning restore 612, 618
        }
    }
}
